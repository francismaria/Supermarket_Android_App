PRAGMA foreign_keys=ON;
BEGIN TRANSACTION;

.headers on
.mode column

/* ------------------------------ *
 *             CARDS              *
 * ------------------------------ */

DROP TABLE IF EXISTS CARDS;
CREATE TABLE CARDS(
  ID        INTEGER PRIMARY KEY,
  NUMBER    TEXT UNIQUE NOT NULL,
  EXP_DATE  TEXT NOT NULL CHECK(length(EXP_DATE) = 5),
  CCV       TEXT NOT NULL CHECK(length(CCV) = 3)
);

INSERT INTO CARDS VALUES(1, "123X-1234-5432-XYZW", "09/22", "223");

/* ------------------------------ *
 *             USERS              *
 * ------------------------------ */

DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS(
  UUID        INTEGER     PRIMARY KEY,
  NAME        TEXT        NOT NULL,
  EMAIL       VARCHAR(60) UNIQUE NOT NULL,
  USERNAME    TEXT UNIQUE NOT NULL CHECK(length(USERNAME) >= 6 AND length(USERNAME) <= 30),
  PASSWORD    TEXT NOT NULL CHECK(length(PASSWORD) >= 6 AND length(PASSWORD) <= 30),
  CARD_ID     INTEGER     NOT NULL,
  PUBLIC_KEY  BLOB        NOT NULL,
  FOREIGN KEY(CARD_ID) REFERENCES CARDS(ID) ON DELETE CASCADE
);

INSERT INTO USERS VALUES(1, "Francisco Maria", "f@gmail.com", "francis", "password", 1, "llaskdçaskdçlaksçldkaçl");

/* ------------------------------ *
 *           PRODUCTS             *
 * ------------------------------ */

DROP TABLE IF EXISTS PRODUCTS;
CREATE TABLE PRODUCTS(
  UUID    INTEGER PRIMARY KEY,
  PRICE   REAL    NOT NULL,
  NAME    TEXT    NOT NULL,
  STOCK   INTEGER NOT NULL
);

INSERT INTO PRODUCTS VALUES(1, 14.00, 'SHOWER', 5);
INSERT INTO PRODUCTS VALUES(2, 20.00, 'BATH', 5);

/* ------------------------------ *
 *          TRANSACTIONS          *
 * ------------------------------ */

DROP TABLE IF EXISTS TRANSACTIONS;
CREATE TABLE TRANSACTIONS(
  ID      INTEGER   PRIMARY KEY,
  USER_ID INTEGER   NOT NULL,
  TIME    TEXT      NOT NULL,
  FOREIGN KEY(USER_ID) REFERENCES USERS(UUID) ON DELETE CASCADE
);

INSERT INTO TRANSACTIONS VALUES(1, 1, "26/04/2019");

/* ------------------------------ *
 *            HISTORY             *
 * ------------------------------ */

DROP TABLE IF EXISTS HISTORY;
CREATE TABLE HISTORY(
  TRANSACTION_ID  INTEGER NOT NULL,
  PRODUCT_ID      INTEGER NOT NULL,
  QUANTITY        INTEGER NOT NULL,
  VOUCHER         INTEGER NOT NULL,
  FOREIGN KEY(TRANSACTION_ID) REFERENCES TRANSACTIONS(ID) ON DELETE CASCADE,
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(UUID) ON DELETE CASCADE,
  PRIMARY KEY(TRANSACTION_ID, PRODUCT_ID)
);

INSERT INTO HISTORY VALUES(1, 1, 10, 0);
INSERT INTO HISTORY VALUES(1, 2, 5, 0);



SELECT * FROM PRODUCTS;
SELECT * FROM TRANSACTIONS;
SELECT * FROM HISTORY;

SELECT TRANSACTION_ID, PRODUCT_ID, QUANTITY, TIME, USER_ID FROM HISTORY INNER JOIN TRANSACTIONS;

COMMIT;
